---
  - hosts: all
    gather_facts: yes
    become: yes
    vars:
      stack_admin_user_pwd: "secret"
      stack_database_pwd: "secret"
      stack_rabbit_pwd: "secret"
      stack_service_pwd: "secret"

    tasks:

      - name: Disable selinux
        selinux:
          state: disabled

      - name: "Add a user for OpenStack"
        user:
          name: "stack"
          shell: "/bin/bash"
          home: "/opt/stack"
          comment: "User for OpenStack"

      - name: Add a sudo rule
        copy:
          content: 'stack ALL=(ALL) NOPASSWD: ALL'
          dest: "/etc/sudoers.d/stack"

      - name: "Install git"
        yum:
          name: [ "git" ]
          state: "latest"

      - name: "Install epel-release"
        yum:
          name: epel-release
          state: latest

      #- name: "Install additional packages"
      #  yum:
      #    name: [ "python-pbr", "python2-pbr", "python-cinderclient", "python-urllib3" ]
      #    state: "latest"

      - name: "Clone OpenStack repo"
        become: "yes"
        become_user: "stack"
        git:
          repo: "https://git.openstack.org/openstack-dev/devstack"
          dest: "/opt/stack/stack"
          force: yes

      - name: Change stackrc setting
        lineinfile:
          path: /opt/stack/stack/stackrc
          regexp: 'SERVICE_TIMEOUT\=\$\{SERVICE_TIMEOUT\:\-60\}'
          line: "SERVICE_TIMEOUT=${SERVICE_TIMEOUT:-120}"

      - name: "Create local.conf file for OpenStack"
        copy:
          content: |
                    [[local|localrc]]
                    ADMIN_PASSWORD={{ stack_admin_user_pwd }}
                    DATABASE_PASSWORD={{ stack_database_pwd }}
                    RABBIT_PASSWORD={{ stack_rabbit_pwd }}
                    SERVICE_PASSWORD={{ stack_service_pwd }}
                    HOST_IP={{ ansible_lo.ipv4.address }}
                    SERVICE_HOST={{ ansible_lo.ipv4.address }}
          dest: "/opt/stack/stack/local.conf"

      - name: "Start the install of OpenStack"
        become: "yes"
        become_user: "stack"
        command: "./stack.sh"
        args:
          chdir: "/opt/stack/stack"
        environment:
          no_proxy: "192.168.4.111"

      - name: Ensure httpd running and enabled
        service:
          name: httpd
          enabled: yes
          state: started
